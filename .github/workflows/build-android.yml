name: Build Android

on:
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: Lint & Formatting Check
    uses: ./.github/workflows/lint.yml

  test:
    name: Run Tests
    uses: ./.github/workflows/test.yml
    needs: lint

  build-android:
    name: Build Android APK
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - run: npm ci

      - run: cd android && chmod +x ./gradlew

      - run: cd android && ./gradlew test

      - run: cd android && ./gradlew build

      - run: cd android && ./gradlew assembleRelease

      - uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Upload APK to Diawi and Wait for Link
        id: diawi
        run: |
          echo "Uploading APK to Diawi..."
          response=$(curl -s -F "token=${{ secrets.DIAWI_TOKEN }}" \
                           -F "file=@android/app/build/outputs/apk/release/app-release.apk" \
                           -F "comment=Uploaded via GitHub Actions CI" \
                           https://upload.diawi.com/)

          echo "Raw Response: $response"
          job=$(echo "$response" | jq -r '.job')

          if [ -z "$job" ] || [ "$job" == "null" ]; then
            echo "‚ùå Failed to retrieve Diawi job ID."
            exit 1
          fi

          echo "Polling Diawi for public link..."
          link=""
          for i in {1..10}; do
            sleep 6
            poll=$(curl -s "https://upload.diawi.com/status?token=${{ secrets.DIAWI_TOKEN }}&job=$job")
            link=$(echo "$poll" | jq -r '.link // empty')
            message=$(echo "$poll" | jq -r '.message')

            echo "[$i] Status: $message"

            if [ -n "$link" ] && [ "$link" != "null" ]; then
              echo "‚úÖ Diawi link: $link"
              echo "DIAWI_LINK=$link" >> $GITHUB_ENV
              echo "link=$link" >> $GITHUB_OUTPUT
              break
            fi
          done

          if [ -z "$link" ] || [ "$link" == "null" ]; then
            echo "‚ùå Diawi did not return a link after waiting."
            exit 1
          fi

      - name: Debug Environment
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Diawi link from ENV: ${{ env.DIAWI_LINK }}"
          echo "Diawi link from output: ${{ steps.diawi.outputs.link }}"
          echo "PR Number: ${{ github.event.number }}"
          echo "Repository: ${{ github.repository }}"

      - name: Comment Diawi Link on PR
        if: github.event_name == 'pull_request' && (env.DIAWI_LINK != '' || steps.diawi.outputs.link != '')
        uses: actions/github-script@v7
        with:
          script: |
            const link = process.env.DIAWI_LINK || '${{ steps.diawi.outputs.link }}';

            if (!link || link === 'null' || link === '') {
              console.log('‚ùå No valid Diawi link found');
              return;
            }

            const body = `üöÄ **Android APK Ready!**

            üì± [**Install APK from Diawi**](${link})

            *Built from commit: \`${{ github.sha }}\`*`;

            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
              console.log('‚úÖ Successfully commented on PR');
            } catch (error) {
              console.error('‚ùå Failed to comment on PR:', error);
              throw error;
            }
        env:
          DIAWI_LINK: ${{ env.DIAWI_LINK }}
